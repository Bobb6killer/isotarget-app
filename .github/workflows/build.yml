name: Build IsoTarget Cross-Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            output_name: IsoTarget.exe
            build_args: --noconfirm --onefile --windowed --name IsoTarget
          - os: macos-latest
            output_name: IsoTarget
            build_args: --noconfirm --onefile --windowed --name IsoTarget

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow

    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      run: |
        pyinstaller ${{ matrix.build_args }} IsoTarget_classroom.py
        
    - name: Build executable (macOS)
      if: runner.os == 'macOS'
      run: |
        pyinstaller ${{ matrix.build_args }} IsoTarget_classroom.py

    - name: List dist contents (debug)
      run: |
        ls -la dist/

    - name: Upload Windows executable
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: IsoTarget-Windows
        path: dist/IsoTarget.exe
        retention-days: 30

    - name: Upload macOS executable  
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: IsoTarget-macOS
        path: dist/IsoTarget
        retention-days: 30

    - name: Create App Bundle (macOS alternative)
      if: runner.os == 'macOS'
      run: |
        pyinstaller --noconfirm --windowed --name IsoTarget-App IsoTarget_classroom.py

    - name: Upload macOS App Bundle
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: IsoTarget-macOS-App-Bundle
        path: dist/IsoTarget-App.app/
        retention-days: 30

  # Optional: Create a release when you tag
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          IsoTarget-Windows/IsoTarget.exe
          IsoTarget-macOS/IsoTarget
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
